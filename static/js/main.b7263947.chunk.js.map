{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","addGood","goodsList","good","setState","removeGood","requiredGood","filteredList","filter","formatTitle","length","slice","join","this","className","classNames","type","onClick","map","key","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAmFaC,E,4MA/EbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,EAAWC,GACpB,EAAKC,SAAS,CAAEJ,cAAc,GAAD,mBAAME,GAAN,CAAiBC,O,EAGhDE,WAAa,SAACH,EAAWI,GACvB,IAAMC,EAAeL,EAAUM,QAAO,SAAAL,GAAI,OAAIA,IAASG,KAEvD,EAAKF,SAAS,CAAEJ,cAAc,YAAKO,M,EAGrCE,YAAc,SAACP,GACb,OAAQA,EAAUQ,QAChB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUR,EAAU,GAApB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAUS,MAAM,GAAI,GAAGC,KAAK,MAAtC,2BACQV,EAAUS,OAAO,GADzB,mB,4CAKN,WAAU,IAAD,OACCX,EAAkBa,KAAKd,MAAvBC,cAER,OACE,yBAAKc,UAAU,OACb,wBAAIA,UAAU,cACXD,KAAKJ,YAAYT,GAClB,4BACEc,UAAWC,IAAW,SAAU,CAC9B,kBAAmBf,EAAcU,OACjC,iBAAkBV,EAAcU,SAElCM,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CAAEJ,cAAe,OAPnC,UAaF,wBAAIc,UAAU,aACXjB,EAAgBqB,KAAI,SAAAf,GAAI,OACvB,wBACEgB,IAAKhB,EACLW,UAAWC,IAAW,YAAa,CACjC,sBAAuBf,EAAcoB,SAASjB,MAGhD,0BAAMW,UAAU,aAAaX,GAC7B,4BACEW,UAAWC,IAAW,SAAU,CAC9B,eAAgBf,EAAcoB,SAASjB,GACvC,iBAAkBH,EAAcoB,SAASjB,KAG3Ca,KAAK,SACLC,QAASjB,EAAcoB,SAASjB,GAC5B,kBAAM,EAAKE,WAAWL,EAAeG,IACrC,kBAAM,EAAKF,QAAQD,EAAeG,KAGrCH,EAAcoB,SAASjB,GAAQ,SAAW,iB,GAtEzCkB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b7263947.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  addGood = (goodsList, good) => {\n    this.setState({ selectedGoods: [...goodsList, good] });\n  };\n\n  removeGood = (goodsList, requiredGood) => {\n    const filteredList = goodsList.filter(good => good !== requiredGood);\n\n    this.setState({ selectedGoods: [...filteredList] });\n  };\n\n  formatTitle = (goodsList) => {\n    switch (goodsList.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${goodsList[0]} is selected`;\n\n      default:\n        return `${goodsList.slice(0, -1).join(', ')}\n          and ${goodsList.slice(-1)} are selected`;\n    }\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.formatTitle(selectedGoods)}\n          <button\n            className={classNames('button', {\n              'button--hidden': !selectedGoods.length,\n              'button--remove': selectedGoods.length,\n            })}\n            type=\"button\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            Reset\n          </button>\n        </h1>\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames('App__item', {\n                'App__item--selected': selectedGoods.includes(good),\n              })}\n            >\n              <span className=\"App__good\">{good}</span>\n              <button\n                className={classNames('button', {\n                  'button--add': !selectedGoods.includes(good),\n                  'button--remove': selectedGoods.includes(good),\n                })}\n\n                type=\"button\"\n                onClick={selectedGoods.includes(good)\n                  ? () => this.removeGood(selectedGoods, good)\n                  : () => this.addGood(selectedGoods, good)\n                }\n              >\n                {selectedGoods.includes(good) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}